AWSTemplateFormatVersion: "2010-09-09"
Description: A repo for a sample Spring Boot-based web workload container image

Resources:
  DockerRepo:
    Type: AWS::ECR::Repository
    Properties: 
      RepositoryName: !Join [ '', [ !Ref 'AWS::StackName', '-repo' ] ]

  TaskLogGroup:
    Type: AWS::Logs::LogGroup
    Properties: 
      LogGroupName: !Join [ '', [ '/ecs/', !Ref 'AWS::StackName' ] ]
      RetentionInDays: 7

  ECSExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - "ecs-tasks.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy"
      MaxSessionDuration: 3600
      Path: /service-role/

  TaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties: 
      ExecutionRoleArn: !GetAtt ECSExecutionRole.Arn
      Cpu: "256"
      Memory: "512"
      Family: !Ref 'AWS::StackName'
      NetworkMode: "awsvpc"
      RequiresCompatibilities:
        - "FARGATE"
      ContainerDefinitions:
        - Cpu: "256"
          Essential: true
          Image: !Sub "${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/${DockerRepo}:latest"
          LogConfiguration:
            LogDriver: "awslogs"
            Options:
              "awslogs-group": !Ref TaskLogGroup
              "awslogs-region": !Ref 'AWS::Region'
              "awslogs-stream-prefix": "ecs"
          Memory: "512"
          MemoryReservation: "512"
          Name: !Ref 'AWS::StackName'
          PortMappings:
            - ContainerPort: 8080
              Protocol: "tcp"

Outputs:
  DockerRepo:
    Value: !Ref DockerRepo
  DockerRepoUrl:
    Value: !Sub "${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/${DockerRepo}"
